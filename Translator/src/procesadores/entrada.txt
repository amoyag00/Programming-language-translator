real $a, $d, $t;
string $cadena, $cadena2;
integer $c,$otroarray[2][5][1],$unarray [9];
character $char1, $char2;
integer $elarray[4][5];
real $g;
//Jaja si
/* soi llo
  el cucho */
struct $things{
   real $number;
   real $number2;
   integer $number3;
   real $things;
   string $cadena;
   character $char1;
   bool $bool1;
   integer $arraysenores [4][5];
};
struct $things2{
   real $number;
   
   string $arraysenores [1];
};



endStructs
function real $hola (real $param1, real $param2){
	real $wenas;
	bool $xd;
	real $numeros[3][4];
	struct $things $thing;
	$param1 = $param1 + $param2;
	
	return $numeros[0][3];
	
}



function real $main(){
	integer $a, $b, $c;
	real $param1;
	string $cadena;
	real $d, $e, $f;
	integer $nombre2 [2][5][4];
	integer $array2 [2][6][4];
   struct $things $thing;
   struct $things $thing2;
   
   $thing.$number = 2.0;
   $thing.$number2 = 4.0;
   $thing.$number3 = 5;
	$a = $a+$a;
	$d = -$a;
	$d = $a^$b+(5^$thing.$number2);
   print("Escribe un n√∫mero");

   read($a);

   if($thing.$number3 < $thing.$number){
      $thing.$number = $thing.$number + $thing.$number3; 
   }else{
      $thing.$number2 = $thing.$number2 + $thing.$number3; 
   };
   
   iter($nombre2[3][3][2]==$b){
   		$nombre2 = $array2;
   };
   
   $hola($d, $d);
	return $thing.$number2;
}


