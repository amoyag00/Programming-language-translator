real $a, $d, $t;
string $cadena, $cadena2;
integer $c,$otroarray[2][5][1],$unarray [9];
character $char1, $char2;
integer $elarray[4][5];
real $g;
//multilinea
/* multilinea */
struct $things{
   real $number;
   real $number2;
   integer $number3;
   real $things;
   string $cadena;
   character $char1;
   bool $bool1;
   integer $arraysenores [4][5];
};
struct $things2{
   real $number;
   
   string $arraysenores [1];
};



endStructs

function integer $prueba(){
	integer $i;
	$i=0;
	$prueba();
	return 0;
}
function real $hola (real $param1, real $param2){
	real $wenas;
	bool $xd;
	real $numeros[3][4];
	integer $numerosInt[3][4];
	struct $things $thing;
	$param1 = $param1 + $param2;
	return $numeros[0][3];
	
}

function real $hola2 (){
	real $wenas;
	bool $xd;
	real $numeros[3][4];
	struct $things $thing;
	//$param1 = $param1 + $param2;
	$hola2();
	return $numeros[0][3];
	
}


function real $main(){
	integer $a, $b, $c;
	real $param1;
	string $cadena;
	real $d, $e, $f;
	integer $nombre2 [2][5][4];
	integer $array2 [2][6][6];
   struct $things $thing;
   struct $things $thing2;
   struct $things2 $thing3;
   
   $thing.$number = 2.0;
   $thing.$number2 = 4.0;
   $thing.$number3 = $array2[1][2][4];
   $thing=$thing2;
   $a = $array2[1][2][1];
	$a = $a+$a;
	$d = -$a;
	
	$d = $a^$b+(5^$thing.$number2);
   print("Escribe un nÃºmero");

   read($a);
	if( $a == $a||$d>$a){
		$d = $d;
	};
   if($thing.$number3 < $thing.$number){
      $thing.$number = $thing.$number + $thing.$number3; 
   }else{
      $thing.$number2 = $thing.$number2 + $thing.$number3;
      if( $thing.$number3 < $thing.$number){
      	$a=$a;
      };
   };
   
   
   
  // $hola($d, $d);
	return $thing.$number2;
}


